rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function userHasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function hasOnly(fields) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(fields);
    }

    match /documents/{doc} {
      allow read;
      allow create: if userHasRole("SITE_ADMIN") || userHasRole("AUTHOR") || userHasRole("USER_ADMIN")
      allow update: if request.auth.uid == resource.data.authorUid || userHasRole("SITE_ADMIN");
      allow delete: if request.auth.uid == resource.data.authorUid || userHasRole("SITE_ADMIN");
    }

    match /users/{user} {
      allow read;
      allow create:
        if request.resource.data.role == "NONE";
      allow update:
        if userHasRole("USER_ADMIN") || userHasRole("SITE_ADMIN") || hasOnly(['lastLogin'])
    }

    match /files/{file} {
        allow read;
        allow create: if userHasRole("SITE_ADMIN") || userHasRole("AUTHOR") || userHasRole("USER_ADMIN")
        allow update: if request.auth.uid == resource.data.uploaderUid || userHasRole("SITE_ADMIN");
        allow delete: if request.auth.uid == resource.data.uploaderUid || userHasRole("SITE_ADMIN");
    }

    match /system/app {
      allow read;
      allow create:
        if userHasRole("SITE_ADMIN");
      allow update:
        if userHasRole("SITE_ADMIN");
    }
  }
}